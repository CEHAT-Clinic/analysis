devtools::document()
devtools::document()
hourlyPA <- function(data){
###########################
sensors <- unique(data[,c('longitude','latitude')])
sensors <- dplyr::mutate(sensors,
names = case_when(longitude == -118.1901 & latitude == 33.94106 ~ "Sensor: SCSG-14",
longitude == -118.1953 & latitude == 33.94354 ~ "Sensor: CEHAT 7-CD",
longitude == -118.2201 & latitude == 33.94178 ~ "Sensor: CEHAT-01",
longitude == -118.1985 & latitude == 33.96063 ~ "Sensor: CEHAT 5",
longitude == -118.2184 & latitude == 33.96757 ~ "Sensor: CCA Mountainview and Olive",
longitude == -118.2146 & latitude == 33.95058 ~ "Sensor: CEHAT-St. Helens-STEM",
longitude == -118.1685 & latitude == 33.93553 ~ "Sensor: SCSG_15",
longitude == -118.1673 & latitude == 33.92019 ~ "Sensor: SCSG_20",
longitude == -118.2225 & latitude == 33.95094 ~ "Sensor: CEHAT 7-SE",
longitude == -118.1965 & latitude == 33.93868 ~ "Sensor: CEHAT 8",
longitude == -118.2181 & latitude == 33.96192 ~ "Sensor: CEHAT 3")
)
sensorNum <- nrow(sensors)
############################
data$timestamp <- cut(data$timestamp, breaks="hour") #uses the "timestamp" column
PAhourly <- data.frame(Date=as.Date(character()),
PM2.5=double(),
humidity=double(),
latitude=double(),
longitude=double())
#aggregate the data to get hourly averages per sensor location
for (i in 1:sensorNum) {
agg <- aggregate(cbind(PM2.5, humidity, latitude, longitude) ~ timestamp,
data = data[data$longitude == sensors[i,1],], mean)
PAhourly <- rbind(PAhourly,agg)
}
PAhourly <- PAhourly[order(PAhourly$timestamp),]
PAhourly[,2] <- round(PAhourly[,2],2)
PAhourly[,3] <- round(PAhourly[,3],2)
PAhourly$timestamp <- lubridate::ymd_hms(as.character(PAhourly$timestamp)) #change class from factor to POSIXct
#add days field so that we can aggregate max and min values by day. do this with hours as well
PAhourly$hour <- hour(PAhourly$timestamp)
PAhourly$weekday <- wday(PAhourly$timestamp, label=T, abbr = F)
#map the time of day to corresponding timestamps
PAhourly <- dplyr::mutate(PAhourly,
timeofday = case_when(hour >= 0 & hour <= 5 ~ "night",
hour >= 6 & hour <= 11 ~ "morning",
hour >= 12 & hour <= 17 ~ "afternoon",
hour >= 18 & hour <= 23 ~ "evening" )
)
PAhourly <- dplyr::left_join(PAhourly, sensors, by = c("latitude","longitude"), keep= F)
PAhourly
}
devtools::document()
devtools::document()
}
devtools::document()
devtools::document()
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({library(PurpleAirCEHAT)
library(dplyr)
library(tidyverse)})
wessy_pal <- c("high"="#C93312","low"="#899DA4")
inputPanel(
selectInput("sensor", label = "View sensor:",
choices = sensors$names, selected = "Sensor: SCSG-14")
)
install.packages('plotfly')
install.packages('plotly')
library(plotly)
devtools::install_github("CEHAT-Clinic/analysis.git")
devtools::install_github("CEHAT-Clinic/analysis")
devtools::install('PurpleAirCEHAT')
library(PurpleAirCEHAT)
knitr::opts_chunk$set(echo = TRUE)
#devtools::install_github("CEHAT-Clinic/analysis")
suppressPackageStartupMessages({library(PurpleAirCEHAT)
library(dplyr)
library(plotly)
library(tidyverse)})
hilo <- lollipop(PAhi_lo,input$sensor)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install_github("CEHAT-Clinic/analysis")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pct_diffs <- as.data.frame(names = sensors$names, `0-15%`, `15%-50%`, `50%-100%`, `100%-200%`, `above_200%` )
pct_diffs <- as.data.frame(names = sensors$names, `0-15%`=numeric(), `15%-50%`, `50%-100%`, `100%-200%`, `above_200%` )
pct_diffs <- as.data.frame(names = sensors$names,
`0-15%`=numeric(),
`15%-50%`=numeric(),
`50%-100%`=numeric(),
`100%-200%`=numeric(),
`above_200%`=numeric() )
pct_diffs
pct_diffs <- as.data.frame(names = sensors$names,
`0-15%`=double(),
`15%-50%`=double(),
`50%-100%`=double(),
`100%-200%`=double(),
`above_200%`=double() )
pct_diffs <- data.frame(names = sensors$names,
`0-15%`=double(),
`15%-50%`=double(),
`50%-100%`=double(),
`100%-200%`=double(),
`above_200%`=double() )
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
shiny::runApp()
devtools::install("PurpleAirCEHAT")
devtools::github_install("PurpleAirCEHAT")
roxygen2::github_install("PurpleAirCEHAT")
github_install("PurpleAirCEHAT")
